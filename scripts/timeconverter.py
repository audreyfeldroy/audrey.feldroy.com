# AUTOGENERATED! DO NOT EDIT! File to edit: ../posts/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb.

# %% auto 0
__all__ = ['app', 'rt', 'time_in_tz', 'print_discord_time', 'print_times', 'TimeConverter', 'TimeTable', 'index', 'convert']

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 5
from datetime import datetime
from fastcore.utils import *
from fasthtml.common import *
from functools import partial
from monsterui.all import *
from nbdev.export import nb_export
from zoneinfo import ZoneInfo

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 6
def time_in_tz(tz:str, dt:datetime|None=None) -> str: 
    if dt is None: dt = datetime.now()
    dt = dt.astimezone(ZoneInfo(tz))
    return f"{tz:20} {dt:%H:%M}"

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 7
def print_discord_time(dt:datetime|None=None) -> None:
    if dt is None: dt = datetime.now()
    print(f"{"Discord":20} <t:{int(dt.timestamp())}:f>")

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 8
def print_times(dt:datetime|None=None) -> None:
    if dt is None: dt = datetime.now()
    tzs = L('America/Los_Angeles', 'America/Chicago', 'America/New_York', 'Europe/London', 'Europe/Istanbul', 'Australia/Brisbane')
    tzs.map(time_in_tz).map(print)
    print_discord_time(dt)

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 9
def TimeConverter(*c):
    return Card(*c, Form(
        H3("Convert a Time", cls="text-base font-semibold text-gray-900 dark:text-slate-100"),
        Input(name="dt", type="datetime-local", value="2025-02-03T14:30"),
        Button("Submit", cls=ButtonT.primary),
        hx_post="/convert",
    ), hx_swap="afterend")

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 10
def TimeTable(dt):
    tzs = L('America/Los_Angeles', 'America/Chicago', 'America/New_York', 'Europe/London', 'Europe/Istanbul', 'Australia/Brisbane',)
    return Table(
        Thead(Tr(Th(f"{dt:%a, %b %-d, %Y %H:%M} GMT is also", colspan=2))),
        *[Tr(
            Td(tz),
            Td(time_in_tz(tz, dt).split()[-1])
          ) for tz in tzs],
        Tr(Td("Discord"), Td(f"<t:{int(dt.timestamp())}:f>"))
    )

# %% ../nbs/2025-02-05-FastHTML-Time-Converter-Part-2.ipynb 13
app, rt = fast_app(hdrs=(Theme.slate.headers(),))

@rt
def index():
    dt = datetime.now()
    return (TimeTable(dt), TimeConverter())

@rt
def convert(dt:str):
    dt = datetime.fromisoformat(dt).replace(tzinfo=ZoneInfo('Europe/London'))
    return (TimeTable(dt), TimeConverter())

serve()
