# AUTOGENERATED! DO NOT EDIT! File to edit: ../posts/2025-02-05-Create-a-CLI-Tool-With-Fastcore-Script.ipynb.

# %% auto 0
__all__ = ['get_undated_nbs', 'prepend_date', 'main']

# %% ../nbs/2025-02-05-Create-a-CLI-Tool-With-Fastcore-Script.ipynb 4
from fastcore.script import *
from fastcore.utils import *
from pathlib import Path
import time

# %% ../nbs/2025-02-05-Create-a-CLI-Tool-With-Fastcore-Script.ipynb 15
def get_undated_nbs(): return L(Path().glob('[!0-9]*.ipynb'))

# %% ../nbs/2025-02-05-Create-a-CLI-Tool-With-Fastcore-Script.ipynb 19
def prepend_date(fn):
    "Prepend ISO 8601 date to filename if not already present"
    if fn.stem[0].isdigit(): return  # Already has date
    mtime = fn.stat().st_mtime
    date = time.strftime('%Y-%m-%d', time.localtime(mtime))
    new_name = fn.parent/f"{date}-{fn.name}"
    fn.rename(new_name)
    return new_name

# %% ../nbs/2025-02-05-Create-a-CLI-Tool-With-Fastcore-Script.ipynb 22
@call_parse
def main(dry_run:bool=True): # Don't actually rename if True
    "Prepend dates to notebook filenames"
    fns = get_undated_nbs()
    print(f"Found {len(fns)} undated notebooks")
    if dry_run:
        for f in fns:
            mtime = f.stat().st_mtime
            date = time.strftime('%Y-%m-%d', time.localtime(mtime))
            print(f"{f} -> {date}-{f.name}")
    else:
        for f in fns: prepend_date(f)
